pool:
  name: Azure Pipelines
  demands: npm

jobs:
  - job: "DeployLayer"
    steps:
    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: nodejsDB/nodejs
        verbose: false

    - task: ArchiveFiles@2
      displayName: 'Archive nodejsDB/nodejs'
      inputs:
        rootFolderOrFile: nodejsDB/nodejs
        archiveFile: Modules/nodejs.zip

    - task: S3Upload@1
      displayName: 'S3 Upload: private-bucket-modules-products'
      inputs:
        awsCredentials: 'Connect_Lambdas'
        regionName: 'us-east-1'
        bucketName: 'private-bucket-modules-products'
        sourceFolder: Modules
        targetFolder:

        
    - script: |
              sudo apt-get install jq      
              jq --version
      displayName: "SETUP: Install JQ"
    
    - task: AWSShellScript@1
      inputs:
        awsCredentials: "dev-ana-role-deployment"
        regionName: "us-east-1"
        scriptType: "inline"
        inlineScript: |
          credentials=$(aws sts assume-role --role-arn arn:aws:iam::933005959117:role/CloudFormationADRole --role-session-name session-cluster-azure-dev-ops); 
          export AWS_ACCESS_KEY_ID=$(echo $credentials | jq .Credentials.AccessKeyId | sed 's:^.\(.*\).$:\1:'); 
          export AWS_SECRET_ACCESS_KEY=$(echo $credentials | jq .Credentials.SecretAccessKey | sed 's:^.\(.*\).$:\1:'); 
          export AWS_SESSION_TOKEN=$(echo $credentials | jq .Credentials.SessionToken | sed 's:^.\(.*\).$:\1:');
          aws lambda publish-layer-version --layer-name LayerProductsConnection --content S3Bucket=private-bucket-modules-products,S3Key=nodejsDB/nodejs.zip --compatible-runtimes nodejs12.x